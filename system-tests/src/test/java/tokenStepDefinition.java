

import cucumber.api.PendingException;
import cucumber.api.java.After;
import cucumber.api.java.Before;
import beijing.CreateAccountRequest;
import beijing.CreateBankClientRequest;
import beijing.CustomerSimulator;
import beijing.DTUPayResponse;
import beijing.MerchantSimulator;
import beijing.TokenSimulator;

import com.google.gson.Gson;
import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;

import static junit.framework.TestCase.assertEquals;

import java.math.BigDecimal;

import cucumber.api.java.en.Given;
import cucumber.api.java.en.Then;
import cucumber.api.java.en.When;
import dtu.ws.fastmoney.*;

public class tokenStepDefinition {
	
	private static final String appUrl = "http://02267-bejing.compute.dtu.dk:3002/customers";
	
	private static final Gson jsonLib = new Gson();
	
	private String customerCpr = "0101010101";
	private String merchantCVR = "0202020202";
	private String tokenId = "123";
	private String merchantId = "98765";
	private String customerId = "123456";
	private BigDecimal customerBalance;
	private BigDecimal merchantBalance;
	private Account customerAccount;
	private Account merchantAccount;
	private BigDecimal amount;
	
	
	@Given("^a registered customer$")
	public void a_registered_customer() throws Exception {
	    // Write code here that turns the phrase above into concrete actions
	    throw new PendingException();
	}

	@Given("^the customer requests (\\d+) tokens from the token service$")
	public void the_customer_requests_tokens_from_the_token_service(int arg1) throws Exception {
	    // Write code here that turns the phrase above into concrete actions
	    throw new PendingException();
	}

	@When("^the customer has no valid tokens$")
	public void the_customer_has_no_valid_tokens() throws Exception {
	    // Write code here that turns the phrase above into concrete actions
	    throw new PendingException();
	}

	@Then("^(\\d+) tokens are generated by the token service$")
	public void tokens_are_generated_by_the_token_service(int arg1) throws Exception {
	    // Write code here that turns the phrase above into concrete actions
	    throw new PendingException();
	}

	@Then("^the token service assigns (\\d+) tokens to the registered customer$")
	public void the_token_service_assigns_tokens_to_the_registered_customer(int arg1) throws Exception {
	    // Write code here that turns the phrase above into concrete actions
	    throw new PendingException();
	}
}
